// URL API backend ƒë·ªÉ g·ª≠i/nh·∫≠n d·ªØ li·ªáu ƒë√°nh gi√°
const API_URL = 'https://couple-date-rating-2.onrender.com'; // ƒê·ªïi sang domain backend khi deploy

// L·∫•y c√°c element DOM c·∫ßn thi·∫øt
const emojis = document.querySelectorAll('.emoji'); // C√°c emoji ƒë·ªÉ ƒë√°nh gi√° (1-5 sao)
const message = document.getElementById('message'); // Th√¥ng b√°o ph·∫£n h·ªìi
const feelings = document.getElementById('feelings'); // Textarea nh·∫≠p c·∫£m x√∫c
const meterFill = document.getElementById('meterFill'); // Thanh ti·∫øn tr√¨nh love meter
const photoUpload = document.getElementById('photoUpload'); // Input upload ·∫£nh
const photoPreview = document.getElementById('photoPreview'); // Preview ·∫£nh ƒë√£ upload
const memorySection = document.getElementById('memorySection'); // Section hi·ªÉn th·ªã k·ª∑ ni·ªám
const memories = document.getElementById('memories'); // Container ch·ª©a c√°c k·ª∑ ni·ªám

// M·∫£ng th√¥ng b√°o t∆∞∆°ng ·ª©ng v·ªõi t·ª´ng m·ª©c ƒë√°nh gi√° (1-5 sao)
const messages = [
  "∆† k√¨a, kh√¥ng vui l·∫Øm √†? üòê L·∫ßn sau s·∫Ω t·ªët h∆°n th√¥i! üí™", // 1 sao
  "C≈©ng vui vui ƒë·∫•y nh·ªâ! üòä C√≥ g√¨ kh√¥ng h√†i l√≤ng kh√¥ng? ü§î", // 2 sao
  "√îi z·ªìi √¥i ƒë√°ng y√™u gh√™ ü•∞ üíï", // 3 sao
  "Qu√° ƒë·ªânh lu√¥n √° üòç Em gi·ªèi qu√°! üåü", // 4 sao
  "Em y√™u anh nh√¨u l·∫Øm üíñüíñüíñ Perfect date! ‚ú®üéâ" // 5 sao
];

// M·∫£ng th√¥ng b√°o ƒë·∫∑c bi·ªát (hi·ªÉn th·ªã ng·∫´u nhi√™n thay cho messages th∆∞·ªùng)
const specialMessages = [
  "Hmm... c√≥ l·∫Ω ch√∫ng ta c·∫ßn th·ª≠ g√¨ ƒë√≥ m·ªõi? ü§ó", // 1 sao
  "Kh√¥ng sao, m·ªói ng√†y b√™n nhau ƒë·ªÅu ƒë√°ng tr√¢n tr·ªçng! üíê", // 2 sao
  "Aww, tim em tan ch·∫£y r·ªìi ƒë√¢y! ü´†üíï", // 3 sao
  "Wao! H√¥m nay l√† ng√†y tuy·ªát v·ªùi nh·∫•t! üåà‚ú®", // 4 sao
  "OMG! Couple goals qu√° ƒëi th√¥i! üëëüíñüí´" // 5 sao
];

let currentRating = 0; // Bi·∫øn l∆∞u ƒë√°nh gi√° hi·ªán t·∫°i

// H√†m t·∫°o tr√°i tim bay l√™n (hi·ªáu ·ª©ng n·ªÅn)
function createFloatingHeart() {
  const heart = document.createElement('div');
  heart.className = 'floating-heart';
  // Ch·ªçn ng·∫´u nhi√™n 1 trong 5 lo·∫°i tr√°i tim
  heart.textContent = ['üíñ', 'üíï', 'üíù', 'üíó', 'üíì'][Math.floor(Math.random() * 5)];
  heart.style.left = Math.random() * 100 + '%'; // V·ªã tr√≠ ngang ng·∫´u nhi√™n
  heart.style.animationDuration = (Math.random() * 10 + 10) + 's'; // Th·ªùi gian bay 10-20s
  heart.style.animationDelay = Math.random() * 5 + 's'; // Delay ng·∫´u nhi√™n 0-5s
  document.getElementById('floatingHearts').appendChild(heart);
  setTimeout(() => heart.remove(), 20000); // X√≥a sau 20s
}
// T·∫°o tr√°i tim bay m·ªói 3 gi√¢y
setInterval(createFloatingHeart, 3000);

// X·ª≠ l√Ω s·ª± ki·ªán click v√†o emoji ƒë√°nh gi√°
emojis.forEach((emoji, index) => {
  emoji.addEventListener('click', () => {
    // B·ªè class selected kh·ªèi t·∫•t c·∫£ emoji
    emojis.forEach(e => e.classList.remove('selected'));
    // Th√™m class selected v√†o emoji ƒë∆∞·ª£c click
    emoji.classList.add('selected');
    currentRating = index + 1; // L∆∞u ƒë√°nh gi√° (1-5)

    // T·∫°o hi·ªáu ·ª©ng tr√°i tim bay ra t·ª´ emoji ƒë∆∞·ª£c click
    for(let i = 0; i < 5; i++) {
      setTimeout(() => {
        const heart = document.createElement('div');
        heart.classList.add('heart');
        heart.textContent = ['üíó', 'üíñ', 'üíï', 'üíù', 'üíì'][i];
        document.body.appendChild(heart);
        heart.style.position = 'fixed';
        // V·ªã tr√≠ xu·∫•t hi·ªán g·∫ßn emoji ƒë∆∞·ª£c click
        heart.style.left = (emoji.getBoundingClientRect().left + Math.random() * 40 - 20) + 'px';
        heart.style.top = (emoji.getBoundingClientRect().top - 20) + 'px';
        heart.style.zIndex = '1000';
        setTimeout(() => heart.remove(), 2000); // X√≥a sau 2s
      }, i * 100); // Delay m·ªói tr√°i tim 100ms
    }

    // Ch·ªçn ng·∫´u nhi√™n gi·ªØa message th∆∞·ªùng v√† special message
    const isSpecial = Math.random() > 0.5;
    message.textContent = isSpecial ? specialMessages[index] : messages[index];
    
    // C·∫≠p nh·∫≠t thanh love meter (m·ªói sao = 20%)
    meterFill.style.width = (currentRating * 20) + '%';

    // X·ª≠ l√Ω ·∫£nh ƒë√£ upload (n·∫øu c√≥)
    const file = photoUpload.files[0];
    if (file) {
      const reader = new FileReader();
      reader.onload = function(e) {
        const photoBase64 = e.target.result;
        // Code g·ª≠i d·ªØ li·ªáu ƒë√£ b·ªã comment
        // sendRating(currentRating, feelings.value, photoBase64);
      };
      reader.readAsDataURL(file);
    } else {
      // G·ª≠i m√† kh√¥ng c√≥ ·∫£nh
      // sendRating(currentRating, feelings.value, null);
    }

    // N·∫øu ƒë√°nh gi√° >= 4 sao th√¨ t·∫°o hi·ªáu ·ª©ng confetti
    if(currentRating >= 4) {
      createConfetti();
    }
  });
});

// H√†m g·ª≠i ƒë√°nh gi√° l√™n server (hi·ªán t·∫°i ƒë√£ b·ªã comment)
function sendRating(rating, feeling, photo) {
  fetch(`${API_URL}/api/ratings`, {
    method: 'POST',
    headers: { 'Content-Type': 'application/json' },
    body: JSON.stringify({ rating, feeling, photo })
  })
  .then(res => res.json())
  .then(data => {
    alert('üéâ ƒê√£ g·ª≠i l·ªùi nh·∫Øn ƒë·∫øn t√¨nh y√™u c·ªßa b·∫°n!');
    message.textContent = 'üíå G·ª≠i th√†nh c√¥ng! T√¨nh y√™u ƒë√£ ƒë∆∞·ª£c l∆∞u l·∫°i m√£i m√£i!';
    createConfetti();
    clearForm();
    updateStatsFromServer();
  })
  .catch(err => {
    console.error(err);
    alert('G·ª≠i kh√¥ng th√†nh c√¥ng üò¢');
  });
}

// X·ª≠ l√Ω s·ª± ki·ªán upload ·∫£nh
photoUpload.addEventListener('change', function(e) {
  const file = e.target.files[0];
  if (file) {
    const reader = new FileReader();
    reader.onload = function(e) {
      // Hi·ªÉn th·ªã preview ·∫£nh
      photoPreview.innerHTML = `<img src="${e.target.result}" class="photo-preview" alt="Date photo">`;
      // N·∫øu ƒë√£ c√≥ ƒë√°nh gi√° th√¨ th√™m v√†o memory
      if(currentRating > 0) {
        addMemory(currentRating, feelings.value, e.target.result);
      }
    };
    reader.readAsDataURL(file); // ƒê·ªçc file th√†nh base64
  }
});

// C·∫≠p nh·∫≠t th·ªëng k√™ t·ª´ server
function updateStatsFromServer() {
  fetch(`${API_URL}/api/ratings`)
    .then(res => {
      if (!res.ok) throw new Error(`HTTP ${res.status}`);
      return res.json();
    })
    .then(data => {
      const totalRatings = data.length; // T·ªïng s·ªë ƒë√°nh gi√°
      // T√≠nh ƒëi·ªÉm trung b√¨nh
      const avgRating = totalRatings > 0 ? (data.reduce((sum, r) => sum + r.rating, 0) / totalRatings).toFixed(1) : 0;
      // T√≠nh love score (t·ªëi thi·ªÉu 50, t·ªëi ƒëa 100)
      const loveScore = Math.min(100, Math.max(50, avgRating * 20));

      // C·∫≠p nh·∫≠t UI
      document.getElementById('totalRatings').textContent = totalRatings;
      document.getElementById('avgRating').textContent = avgRating;
      document.getElementById('loveScore').textContent = Math.round(loveScore);
    })
    .catch(err => console.error('L·ªói th·ªëng k√™:', err.message));
}

// Th√™m k·ª∑ ni·ªám m·ªõi v√†o localStorage
function addMemory(rating, feeling, photo) {
  const memory = {
    id: Date.now(), // ID duy nh·∫•t d·ª±a tr√™n timestamp
    rating, feeling, photo,
    // L∆∞u ng√†y gi·ªù hi·ªán t·∫°i theo timezone Vi·ªát Nam
    date: new Date().toLocaleString('vi-VN', { timeZone: 'Asia/Ho_Chi_Minh' })
  };
  // L·∫•y danh s√°ch k·ª∑ ni·ªám ƒë√£ l∆∞u
  let savedMemories = JSON.parse(localStorage.getItem('dateMemories') || '[]');
  // Th√™m k·ª∑ ni·ªám m·ªõi v√†o ƒë·∫ßu danh s√°ch
  savedMemories.unshift(memory);
  // L∆∞u l·∫°i v√†o localStorage
  localStorage.setItem('dateMemories', JSON.stringify(savedMemories));
  displayMemories(); // Hi·ªÉn th·ªã l·∫°i danh s√°ch
  memorySection.style.display = 'block'; // Hi·ªán section k·ª∑ ni·ªám
}

// Hi·ªÉn th·ªã danh s√°ch k·ª∑ ni·ªám
function displayMemories() {
  const savedMemories = JSON.parse(localStorage.getItem('dateMemories') || '[]');
  memories.innerHTML = ''; // X√≥a n·ªôi dung c≈©

  // L·∫•y ng√†y h√¥m nay
  const today = new Date().toLocaleDateString('vi-VN', { timeZone: 'Asia/Ho_Chi_Minh' });

  // Ch·ªâ hi·ªÉn th·ªã 3 k·ª∑ ni·ªám g·∫ßn nh·∫•t
  savedMemories.slice(0, 3).forEach(memory => {
    const memoryDiv = document.createElement('div');
    memoryDiv.className = 'memory-item';
    memoryDiv.innerHTML = `
      <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 10px;">
        <span style="font-weight: bold; color: #ff4081;">${today}</span>
        <span>${'‚≠ê'.repeat(memory.rating)}</span>
      </div>
      ${memory.photo ? `<img src="${memory.photo}" style="width: 100%; height: 100px; object-fit: cover; border-radius: 8px; margin-bottom: 10px;">` : ''}
      <p style="margin: 0; font-style: italic; color: #666;">"${memory.feeling}"</p>
    `;
    memories.appendChild(memoryDiv);
  });
}

// T·∫°o hi·ªáu ·ª©ng confetti (gi·∫•y v·ª•n bay)
function createConfetti() {
  const confettiCount = 30; // S·ªë l∆∞·ª£ng confetti
  const colors = ['#ff69b4', '#ff1493', '#ffc0cb', '#ffb6c1', '#ff91a4']; // M√†u s·∫Øc h·ªìng
  
  for(let i = 0; i < confettiCount; i++) {
    setTimeout(() => {
      const confetti = document.createElement('div');
      confetti.style.position = 'fixed';
      confetti.style.left = Math.random() * 100 + '%'; // V·ªã tr√≠ ngang ng·∫´u nhi√™n
      confetti.style.top = '-10px'; // B·∫Øt ƒë·∫ßu t·ª´ tr√™n c√πng
      confetti.style.width = '10px';
      confetti.style.height = '10px';
      confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
      confetti.style.transform = 'rotate(' + Math.random() * 360 + 'deg)'; // Xoay ng·∫´u nhi√™n
      confetti.style.animation = 'floatUp 3s ease-out forwards'; // Animation r∆°i xu·ªëng
      confetti.style.zIndex = '1001';
      document.body.appendChild(confetti);
      setTimeout(() => confetti.remove(), 3000); // X√≥a sau 3s
    }, i * 50); // Delay m·ªói confetti 50ms
  }
}

// Kh·ªüi t·∫°o: hi·ªÉn th·ªã k·ª∑ ni·ªám ƒë√£ l∆∞u
displayMemories();
// N·∫øu c√≥ k·ª∑ ni·ªám th√¨ hi·ªán section
if(JSON.parse(localStorage.getItem('dateMemories') || '[]').length > 0) {
  memorySection.style.display = 'block';
}

// T·∫°o tr√°i tim khi g√µ t·ª´ "y√™u" ho·∫∑c "love"
feelings.addEventListener('input', () => {
  if(feelings.value.includes('y√™u') || feelings.value.includes('love')) {
    createFloatingHeart();
  }
});

// Easter egg: Konami Code
let konamiCode = []; // M·∫£ng l∆∞u ph√≠m ƒë√£ nh·∫•n
const konamiSequence = ['ArrowUp', 'ArrowUp', 'ArrowDown', 'ArrowDown', 'ArrowLeft', 'ArrowRight', 'ArrowLeft', 'ArrowRight'];

document.addEventListener('keydown', (e) => {
  konamiCode.push(e.code); // Th√™m ph√≠m v·ª´a nh·∫•n
  // Ch·ªâ gi·ªØ l·∫°i s·ªë ph√≠m b·∫±ng ƒë·ªô d√†i sequence
  if(konamiCode.length > konamiSequence.length) konamiCode.shift();
  
  // Ki·ªÉm tra c√≥ kh·ªõp Konami Code kh√¥ng
  if(JSON.stringify(konamiCode) === JSON.stringify(konamiSequence)) {
    message.textContent = "üéâ CHEAT CODE ACTIVATED! Unlimited love! üíñ‚àû";
    document.getElementById('loveScore').textContent = '‚àû'; // Love score v√¥ h·∫°n
    createConfetti();
    konamiCode = []; // Reset
  }
});